name: CI
on:
  push:
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Get pnpm cache directory path
        id: pnpm-cache-dir-path
        run: echo "::set-output name=dir::$(pnpm store path)"
      - uses: actions/cache@v2
        id: pnpm-cache
        with:
          path: ${{ steps.pnpm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - run: pnpm install --frozen-lockfile
      - run: pnpm run lint && pnpm run build
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./dist
      
  test_basic:
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: ./dist
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Get pnpm cache directory path
        id: pnpm-cache-dir-path
        run: echo "::set-output name=dir::$(pnpm store path)"
      - uses: actions/cache@v2
        id: pnpm-cache
        with:
          path: ${{ steps.pnpm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Run standard dev test
        run: pnpm moonwall test basic

  test_dev:
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "pnpm"
      - name: Build like before
        run: |
          pnpm install --frozen-lockfile
          pnpm run lint && pnpm run build
      - name: Download moonbeam binary
        run: pnpm moonwall download moonbeam latest ./tmp
      - name: Run standard dev test
        run: pnpm moonwall test dev_test
      #    - name: Run parallel dev test  <--- doesn't work for some reason
      #      run: pnpm moonwall test dev_multi
      - name: Run sequential dev test
        run: pnpm moonwall test dev_seq

  test_chopsticks:
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "pnpm"
      - name: Build like before
        run: |
          pnpm install --frozen-lockfile
          pnpm run lint && pnpm run build
      - name: Run standard chopsticks run
        run: pnpm moonwall test chopsticks

  test_readonly:
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "pnpm"
      - name: Build like before
        run: |
          pnpm install --frozen-lockfile
          pnpm run lint && pnpm run build
      - name: Run standard ethers run
        run: pnpm moonwall test eth_test
      - name: Run standard viem run
        run: pnpm moonwall test viem_test
      #  disabled until web3.js fix their stuff
      # - name: Run standard web3 run
      # run: pnpm moonwall test web3_test

  test_zombie:
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "pnpm"
      - name: Build like before
        run: |
          pnpm install --frozen-lockfile
          pnpm run lint && pnpm run build
      - name: Download binaries
        run: |
          pnpm moonwall download moonbeam latest ./tmp
          pnpm moonwall download polkadot latest ./tmp
      - name: Run standard zombie test
        run: pnpm moonwall test zombie_test

  test_multi_zombie:
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "pnpm"
      - name: Build like before
        run: |
          pnpm install --frozen-lockfile
          pnpm run lint && pnpm run build
      - name: Download binaries
        run: |
          pnpm moonwall download moonbeam latest ./tmp
          pnpm moonwall download polkadot latest ./tmp
      - name: Run multi zombie test
        run: pnpm moonwall test zombie_multi_para
